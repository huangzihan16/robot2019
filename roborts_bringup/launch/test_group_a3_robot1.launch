<launch>
<arg name="identity" value="robot1" />
<group ns="$(arg identity)">
  <master auto="start"/>
  <arg name="map" value="icra2019"/>

  <!--Load parameters for localization node  -->
  <rosparam command="load" file="$(find roborts_localization)/config/localization.yaml" />
  <rosparam command="load" file="$(find roborts_localization)/amcl/config/amcl.yaml" />

  <!-- Run the robot sdk interface -->
  <include file="$(find roborts_bringup)/launch/base.launch" />

  <!-- Publish static tf -->
  <include file="$(find roborts_bringup)/launch/static_tf.launch" />

  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find roborts_bringup)/maps/$(arg map).yaml" respawn="false" />

  <!-- Run the rplidar A3 node -->
  <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
      <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
      <param name="serial_baudrate"     type="int"    value="256000"/><!--A3 -->
      <param name="frame_id"            type="string" value="base_laser_link"/>
      <param name="inverted"            type="bool"   value="false"/>
      <param name="angle_compensate"    type="bool"   value="true"/>
      <param name="scan_mode"           type="string" value="Sensitivity"/>
  </node>

  <!-- Run the localization node -->
  <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false" />

  <!-- Run the global planner node -->
  <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false" />

  <!-- Run the local planner node -->
  <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false" />

  <!-- Run the detection node -->
  <node pkg="roborts_detection" type="armor_detection_node" name="detection_node" respawn="false" />

  <!-- Run the behavior tree node -->
  <node pkg="roborts_decision" type="dual_behavior_tree_test" name="decision_node" output="screen" />
</group>
</launch>

